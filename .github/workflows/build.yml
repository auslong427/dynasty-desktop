- name: Install NSIS
  run: choco install nsis -y

# Build an NSIS installer (.exe)
- name: Build NSIS installer
  run: npx --yes @tauri-apps/cli@latest build --bundles nsis


name: Build Windows Portable (.exe)
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: dtolnay/rust-toolchain@stable

      - name: Expand project from zip
        shell: pwsh
        run: |
          if (Test-Path src) { Remove-Item -Recurse -Force src }
          if (Test-Path src-tauri) { Remove-Item -Recurse -Force src-tauri }
          Expand-Archive -Path dynasty-desktop.zip -DestinationPath . -Force

      - name: Fix Tauri v2 config (identifier + assets path)
        shell: pwsh
        run: >
          node -e "const fs=require('fs'),p='src-tauri/tauri.conf.json';
          const j=JSON.parse(fs.readFileSync(p,'utf8'));
          // identifier: top-level only, and not ending with .app
          if(!j.identifier || /\.app$/.test(j.identifier)) j.identifier='com.dynastydesktop.desktop';
          if(j.bundle && 'identifier' in j.bundle) delete j.bundle.identifier;
          // ensure frontendDist points to root dist (where Vite builds)
          j.build=j.build||{};
          j.build.frontendDist='../dist';
          fs.writeFileSync(p, JSON.stringify(j,null,2));
          console.log('identifier:', j.identifier, 'frontendDist:', j.build.frontendDist);"

      - name: Install deps
        run: npm ci || npm i

      - name: Build web assets
        run: npm run build

      - name: Build Tauri (portable exe, no bundling)
        run: npx --yes @tauri-apps/cli@latest build --no-bundle

      - name: Upload portable exe
        uses: actions/upload-artifact@v4
        with:
          name: portable-exe
          path: src-tauri/target/release/*.exe
